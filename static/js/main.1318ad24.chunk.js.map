{"version":3,"sources":["Context.js","components/VideoPlayer.jsx","components/Sidebar.jsx","components/Notifications.jsx","components/Messages.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","_ref","children","callAccepted","setCallAccepted","useState","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","_ref2","from","callerName","signal","isReceivingCall","message","console","log","_jsx","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","sendMessage","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","useContext","classes","_jsxs","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoPlay","root","display","marginTop","Sidebar","idToCall","setIdToCall","setMessage","Container","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","CopyToClipboard","text","Button","color","startIcon","Assignment","fontSize","PhoneDisabled","onClick","Phone","Notifications","_Fragment","style","connect","MessagesDisplayComponent","messages","setMessages","prevMessages","off","map","msg","index","appBar","borderRadius","alignItems","image","marginLeft","wrapper","App","AppBar","position","align","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1318ad24.chunk.js","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\n\nconst SocketContext = createContext();\n\n// const socket = io('ws://localhost:5000')\nconst socket = io('http://videochat-env-1.eba-4czevz3r.us-east-2.elasticbeanstalk.com/');\n\nconst ContextProvider = ({ children }) => {\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n      .then((currentStream) => {\n        setStream(currentStream);\n\n        myVideo.current.srcObject = currentStream;\n      });\n\n    socket.on('me', (id) => {\n      setMe(id);\n    });\n\n    socket.on('callUser', ({ from, name: callerName, signal }) => {\n      setCall({ isReceivingCall: true, from, name: callerName, signal });\n    });\n\n    socket.on('receiveMessage', (message) => {\n      // eslint-disable-next-line\n      console.log('New message received:', message);\n    });\n  }, []);\n\n  const answerCall = () => {\n    setCallAccepted(true);\n\n    const peer = new Peer({ initiator: false, trickle: false, stream });\n\n    peer.on('signal', (data) => {\n      socket.emit('answerCall', { signal: data, to: call.from });\n    });\n\n    peer.on('stream', (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    });\n\n    peer.signal(call.signal);\n\n    connectionRef.current = peer;\n  };\n\n  const callUser = (id) => {\n    const peer = new Peer({ initiator: true, trickle: false, stream });\n\n    peer.on('signal', (data) => {\n      socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\n    });\n\n    peer.on('stream', (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    });\n\n    socket.on('callAccepted', (signal) => {\n      setCallAccepted(true);\n\n      peer.signal(signal);\n    });\n\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n\n    connectionRef.current.destroy();\n\n    window.location.reload();\n  };\n\n  const sendMessage = (message) => {\n    socket.emit('newMessage', message);\n  };\n\n  return (\n    <SocketContext.Provider value={{\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall,\n      sendMessage,\n    }}\n    >\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport { ContextProvider, SocketContext };\n","import React, { useContext } from 'react';\nimport { Grid, Typography, Paper, makeStyles } from '@material-ui/core';\n\nimport { SocketContext } from '../Context';\n\nconst useStyles = makeStyles((theme) => ({\n  video: {\n    width: '550px',\n    [theme.breakpoints.down('xs')]: {\n      width: '300px',\n    },\n  },\n  gridContainer: {\n    justifyContent: 'center',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n  paper: {\n    padding: '10px',\n    border: '2px solid black',\n    margin: '10px',\n  },\n}));\n\nconst VideoPlayer = () => {\n  const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.gridContainer}>\n      {stream && (\n        <Paper className={classes.paper}>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h5\" gutterBottom>{name || 'Name'}</Typography>\n            <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\n          </Grid>\n        </Paper>\n      )}\n      {callAccepted && !callEnded && (\n        <Paper className={classes.paper}>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h5\" gutterBottom>{call.name || 'Name'}</Typography>\n            <video playsInline ref={userVideo} autoPlay className={classes.video} />\n          </Grid>\n        </Paper>\n      )}\n    </Grid>\n  );\n};\n\nexport default VideoPlayer;\n","import React, { useState, useContext } from 'react';\nimport { Button, TextField, Grid, Typography, Container, Paper } from '@material-ui/core';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { SocketContext } from '../Context';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  gridContainer: {\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n  container: {\n    width: '600px',\n    margin: '35px 0',\n    padding: 0,\n    [theme.breakpoints.down('xs')]: {\n      width: '80%',\n    },\n  },\n  margin: {\n    marginTop: 20,\n  },\n  padding: {\n    padding: 20,\n  },\n  paper: {\n    padding: '10px 20px',\n    border: '2px solid black',\n  },\n}));\n\nconst Sidebar = ({ children }) => {\n  const { me, callAccepted, name, setName, callEnded, leaveCall, callUser, sendMessage } = useContext(SocketContext);\n  const [idToCall, setIdToCall] = useState('');\n  const classes = useStyles();\n  const [message, setMessage] = useState('');\n\n  return (\n    <Container className={classes.container}>\n      <Paper elevation={10} className={classes.paper}>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <Grid container className={classes.gridContainer}>\n            <Grid item xs={12} md={6} className={classes.padding}>\n              <Typography gutterBottom variant=\"h6\">Account Info</Typography>\n              <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\n              <CopyToClipboard text={me} className={classes.margin}>\n                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\n                  Copy Your ID\n                </Button>\n              </CopyToClipboard>\n            </Grid>\n            <Grid item xs={12} md={6} className={classes.padding}>\n              <Typography gutterBottom variant=\"h6\">Make a call</Typography>\n              <TextField label=\"ID to call\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\n              {callAccepted && !callEnded ? (\n                <Button variant=\"contained\" color=\"secondary\" startIcon={<PhoneDisabled fontSize=\"large\" />} fullWidth onClick={leaveCall} className={classes.margin}>\n                  Hang Up\n                </Button>\n              ) : (\n                <Button variant=\"contained\" color=\"primary\" startIcon={<Phone fontSize=\"large\" />} fullWidth onClick={() => callUser(idToCall)} className={classes.margin}>\n                  Call\n                </Button>\n              )}\n            </Grid>\n            <Grid>\n              <div>\n                <TextField label=\"Message\" fullWidth value={message} onChange={(e) => setMessage(e.target.value)} />\n                <Button variant=\"contained\" color=\"primary\" fullWidth onClick={() => { sendMessage(message); setMessage(''); }}>\n                  Send\n                </Button>\n              </div>\n            </Grid>\n          </Grid>\n        </form>\n        {children}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Sidebar;\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\n\nimport { SocketContext } from '../Context';\n\nconst Notifications = () => {\n  const { answerCall, call, callAccepted } = useContext(SocketContext);\n\n  return (\n    <>\n      {call.isReceivingCall && !callAccepted && (\n        <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n          <h1>{call.name} is calling:</h1>\n          <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\n            Answer\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Notifications;\n","import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\n// Assuming you have a socket connection established elsewhere and imported here\r\nconst socket = io.connect('http://videochat-env-1.eba-4czevz3r.us-east-2.elasticbeanstalk.com/');\r\n\r\nconst MessagesDisplayComponent = () => {\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Listen for new messages\r\n    socket.on('receiveMessage', (message) => {\r\n      // eslint-disable-next-line\r\n      console.log('New message received:', message);\r\n      // Update the state with the new message\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n\r\n    // Cleanup on component unmount\r\n    return () => {\r\n      socket.off('receiveMessage');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Received Messages</h2>\r\n      <ul>\r\n        {messages.map((msg, index) => (\r\n          <li key={index}>{msg}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesDisplayComponent;\r\n","import React from 'react';\nimport { Typography, AppBar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport VideoPlayer from './components/VideoPlayer';\nimport Sidebar from './components/Sidebar';\nimport Notifications from './components/Notifications';\nimport MessagesDisplayComponent from './components/Messages';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 100px',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '600px',\n    border: '2px solid black',\n\n    [theme.breakpoints.down('xs')]: {\n      width: '90%',\n    },\n  },\n  image: {\n    marginLeft: '15px',\n  },\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.wrapper}>\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography variant=\"h2\" align=\"center\">Video Chat</Typography>\n      </AppBar>\n      <VideoPlayer />\n      <Sidebar>\n        <Notifications />\n        <MessagesDisplayComponent />\n      </Sidebar>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { ContextProvider } from './Context';\n\nimport './styles.css';\n\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}